package com.drexel.wheeloflunch;

import android.app.Activity;
import android.os.Bundle;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.cloudmine.api.CMUser;
import com.cloudmine.api.rest.CMStore;
import com.cloudmine.api.rest.callbacks.CreationResponseCallback;
import com.cloudmine.api.rest.callbacks.LoginResponseCallback;
import com.cloudmine.api.rest.response.CreationResponse;
import com.cloudmine.api.rest.response.LoginResponse;
import com.cloudmine.api.rest.response.code.CMResponseCode;

public class LoginActivity extends Activity 
{
	private static final String APP_ID = "847c4a9387424df28636c133b4b6ec0a";
	private static final String API_KEY = "48bd2e8c6a43482b8847bfb7c07db6e0";
	
	private EditText  username=null;
	private EditText  password=null;
	private Button login;
	private Button register;
	int counter = 3;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) 
	{
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_login);
		
		CMApiCredentials.initialize(APP_ID, API_KEY, getApplicationContext());
		
		username = (EditText)findViewById(R.id.usernameIn);
		password = (EditText)findViewById(R.id.passwordIn);
		login = (Button)findViewById(R.id.signInBtn);
		register = (Button)findViewById(R.id.regBtn);
		
		// instantiate a CMUser instance with an email and password (presumably from the UI)
		final CMUser user = new CMUser("test@example.com", "the-password");
		 
		user.createUser(new CreationResponseCallback() 
		{
		    public void onCompletion(CreationResponse response) 
		    {
		    	System.out.println("was user created? " + response.wasSuccess());
		        boolean userAlreadyExists =
		                          response.getResponseCode().equals(CMResponseCode.EMAIL_ALREADY_EXISTS);
		        if(userAlreadyExists) 
		        {
		            System.out.println("User with that e-mail address already exists; user was not created");
		        } 
		        else 
		        {
		            // configure the store with the user so that it can perform user-centric operations
		            CMStore.getStore().setUser(user);
		        }
		    }
		});
	}

	public void login(View view)
	{
		final CMUser user = new CMUser(username.getText().toString(), password.getText().toString());
		 
		user.login(new LoginResponseCallback() 
		{
		    public void onCompletion(LoginResponse response) 
		    {
		        if(response.wasSuccess()) 
		        {
		        	Toast.makeText(getApplicationContext(), "Redirecting...", 
							Toast.LENGTH_SHORT).show();
		            // configure the store with the user so that it can perform user-centric operations
		            CMStore.getStore().setUser(user);
		        } 
		        else 
		        {
		        	Toast.makeText(getApplicationContext(), "Wrong Credentials", Toast.LENGTH_SHORT).show();
		        	System.out.println("We failed to log in because of: " + response.getResponseCode());
		        }
		    }
		 
		    public void onFailure(Throwable t, String msg) {
		        System.out.println("The call was never made because of: " + msg);
		    }
		});
	}
	public void register(View view)
	{
		/*Intent i = new Intent(getBaseContext(), RegisterActivity.class);                      
		//i.putExtra("PersonID", personID);
		startActivity(i);*/
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) 
	{
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.login, menu);
		return true;
	}

}
